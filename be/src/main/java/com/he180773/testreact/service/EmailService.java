package com.he180773.testreact.service;

import com.he180773.testreact.entity.OtpVerification;
import com.he180773.testreact.repository.OtpVerificationRepository;
import jakarta.mail.MessagingException;
import jakarta.mail.internet.MimeMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Service;

import java.io.UnsupportedEncodingException;
import java.time.LocalDateTime;
import java.util.Random;

@Service
public class EmailService {

    private final JavaMailSender mailSender;
    private final OtpVerificationRepository otpRepo;

    private final String FROM_EMAIL = "leventshop@gmail.com"; // üëà s·ª≠a th√†nh email b·∫°n c·∫•u h√¨nh
    private final String FROM_NAME = "Levents";

    public EmailService(JavaMailSender mailSender, OtpVerificationRepository otpRepo) {
        this.mailSender = mailSender;
        this.otpRepo = otpRepo;
    }

    public void sendOtp(String email) {
        String otp = String.valueOf(new Random().nextInt(899999) + 100000);

        OtpVerification otpEntity = new OtpVerification();
        otpEntity.setEmail(email);
        otpEntity.setOtp(otp);
        otpEntity.setCreatedAt(LocalDateTime.now());
        otpEntity.setUsed(false);
        otpRepo.save(otpEntity);

        String subject = "M√£ x√°c th·ª±c ƒëƒÉng k√Ω t√†i kho·∫£n";
        String text = "M√£ OTP c·ªßa b·∫°n l√†: " + otp;

        sendEmail(email, subject, text);
    }

    public void sendResetOtp(String toEmail, String otp) {
        String subject = "M√£ x√°c nh·∫≠n ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u";
        String text = "M√£ OTP c·ªßa b·∫°n l√†: " + otp + ". M√£ s·∫Ω h·∫øt h·∫°n trong 5 ph√∫t.";
        sendEmail(toEmail, subject, text);
    }

    private void sendEmail(String to, String subject, String otp) {
        try {
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

            // N·ªôi dung HTML
            String htmlContent = "<div style=\"font-family: Arial, sans-serif; max-width: 500px; margin: auto; padding: 20px; " +
                    "border: 1px solid #e0e0e0; border-radius: 10px; background-color: #fafafa;\">" +
                    "<h2 style=\"color: #2e7d32;\">X√°c th·ª±c t√†i kho·∫£n - Levents</h2>" +
                    "<p>Xin ch√†o,</p>" +
                    "<p>Ch√∫ng t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu x√°c th·ª±c c·ªßa b·∫°n. ƒê√¢y l√† m√£ OTP c·ªßa b·∫°n:</p>" +
                    "<div style=\"font-size: 24px; font-weight: bold; color: #d32f2f; margin: 20px 0;\">" + otp + "</div>" +
                    "<p>M√£ s·∫Ω h·∫øt h·∫°n sau 5 ph√∫t. Vui l√≤ng kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai.</p>" +
                    "<hr style=\"margin: 20px 0;\">" +
                    "<p style=\"font-size: 12px; color: #757575;\">Email ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng Levents. Vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y.</p>" +
                    "</div>";

            helper.setTo(to);
            helper.setSubject(subject);
            helper.setText(htmlContent, true); // true ƒë·ªÉ g·ª≠i d∆∞·ªõi d·∫°ng HTML
            helper.setFrom(FROM_EMAIL, FROM_NAME);

            mailSender.send(message);
        } catch (MessagingException | UnsupportedEncodingException e) {
            throw new RuntimeException("G·ª≠i email th·∫•t b·∫°i", e);
        }
    }


}
